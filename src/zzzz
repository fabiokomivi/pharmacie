j'ai un fichier fxml et je voulais injecter la dedans des donnees a afficher dans un label a travers le code
ChatGPT a dit :
ChatGPT

Pour injecter des données dans un fichier FXML et les afficher dans un Label, vous pouvez utiliser le modèle suivant :
Étapes principales :

    Créer un contrôleur Java : Assurez-vous que votre fichier FXML est lié à une classe contrôleur via l'attribut fx:controller.
    Ajouter une référence au Label dans le contrôleur : Utilisez l'annotation @FXML pour associer le Label dans le FXML avec une variable Java.
    Mettre à jour le texte du Label via le contrôleur : Après avoir chargé le fichier FXML, modifiez les propriétés du Label via le contrôleur.

Exemple pratique
Fichier FXML (sample.fxml) :

<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Label?>
<?import javafx.scene.layout.VBox?>

<VBox xmlns:fx="http://javafx.com/fxml" fx:controller="com.example.MyController" spacing="10" alignment="CENTER">
    <Label fx:id="myLabel" text="Initial Text" />
</VBox>

Classe Contrôleur (MyController.java) :

package com.example;

import javafx.fxml.FXML;
import javafx.scene.control.Label;

public class MyController {

    @FXML
    private Label myLabel;

    // Méthode appelée après le chargement du FXML
    @FXML
    public void initialize() {
        myLabel.setText("Texte mis à jour via le contrôleur !");
    }

    // Vous pouvez aussi fournir une méthode publique pour mettre à jour le label
    public void updateLabelText(String text) {
        myLabel.setText(text);
    }
}

Classe principale (Main.java) :

package com.example;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class Main extends Application {

    @Override
    public void start(Stage primaryStage) throws Exception {
        FXMLLoader loader = new FXMLLoader(getClass().getResource("/sample.fxml"));
        VBox root = loader.load();

        // Obtenez le contrôleur si vous devez interagir avec lui après le chargement
        MyController controller = loader.getController();
        controller.updateLabelText("Nouveau texte depuis Main !");

        Scene scene = new Scene(root, 400, 300);
        primaryStage.setScene(scene);
        primaryStage.setTitle("Exemple Injection Label");
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}

Explications :

    Attribut fx:id : Le Label dans le fichier FXML est lié à la variable myLabel du contrôleur via cet identifiant.
    Annotation @FXML : Cette annotation permet à JavaFX d’injecter automatiquement la référence au composant.
    Méthode initialize : Cette méthode est appelée automatiquement après le chargement du fichier FXML, ce qui est pratique pour initialiser vos composants.
    Accès au contrôleur depuis Main : Vous pouvez utiliser le contrôleur pour interagir dynamiquement avec l'interface après le chargement.

Si vous avez des données dynamiques (par exemple, venant d'une base de données ou d'une autre source), vous pouvez utiliser le contrôleur pour les injecter dans l'interface.
